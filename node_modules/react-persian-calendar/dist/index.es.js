import React, { Component } from 'react';
import moment from 'moment-jalaali';

var toPersianDigit = function toPersianDigit(a) {
  if (typeof a === 'number') {
    a = a.toString();
  }
  return a.replace(/\d+/g, function (digit) {
    var enDigitArr = [];

    var peDigitArr = [];

    for (var i = 0; i < digit.length; i++) {
      enDigitArr.push(digit.charCodeAt(i));
    }

    for (var j = 0; j < enDigitArr.length; j++) {
      peDigitArr.push(String.fromCharCode(enDigitArr[j] + (!!a && a === true ? 1584 : 1728)));
    }
    return peDigitArr.join('');
  });
};

function styleInject(css, ref) {
  if ( ref === void 0 ) ref = {};
  var insertAt = ref.insertAt;

  if (!css || typeof document === 'undefined') { return; }

  var head = document.head || document.getElementsByTagName('head')[0];
  var style = document.createElement('style');
  style.type = 'text/css';

  if (insertAt === 'top') {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }

  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}

var css = "#calender_calender-wrapper__DUYwN {\n  position: absolute;\n  bottom: 0;\n  right: 50%;\n  z-index: 10;\n  background-color: white;\n  border: 1px solid silver;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n  transform: translate(50%, -50px);\n  padding: 10px !important;\n  display: flex;\n  width: 320px;\n  flex-direction: column; }\n  #calender_calender-wrapper__DUYwN button {\n    margin-top: auto;\n    width: 100%;\n    font-family: 'irSans';\n    padding: 10px 30px;\n    border-radius: 5px;\n    border: 3px silver solid;\n    background: silver;\n    color: white;\n    box-shadow: none;\n    cursor: pointer;\n    transition: all 0.4s ease-in-out;\n    will-change: background, box-shadow; }\n    #calender_calender-wrapper__DUYwN button:hover {\n      background: slategray;\n      border-color: slategray;\n      color: white; }\n\n#calender_calendar__25HcU {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-content: center;\n  align-items: center;\n  box-sizing: border-box;\n  width: 100%;\n  margin-bottom: 20px; }\n  #calender_calendar__25HcU > div.calender_header__1jIJJ {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n    margin-bottom: 5px;\n    color: grey;\n    direction: rtl;\n    font-family: 'irSans'; }\n    #calender_calendar__25HcU > div.calender_header__1jIJJ > * {\n      vertical-align: middle; }\n    #calender_calendar__25HcU > div.calender_header__1jIJJ > div.calender_icon-and-text-in-a-row__2YQWN {\n      display: flex;\n      justify-content: center;\n      align-content: center;\n      align-items: center;\n      cursor: pointer;\n      font-weight: bold;\n      width: 35px; }\n      #calender_calendar__25HcU > div.calender_header__1jIJJ > div.calender_icon-and-text-in-a-row__2YQWN:hover {\n        color: silver; }\n    #calender_calendar__25HcU > div.calender_header__1jIJJ > span {\n      font-weight: bold;\n      font-size: 1.2em;\n      direction: ltr;\n      box-sizing: border-box;\n      text-align: center;\n      color: grey; }\n  #calender_calendar__25HcU div.calender_weeks-container__1Jo1J {\n    width: 100%;\n    transition: height 0.3s linear;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-content: center;\n    align-items: center; }\n    #calender_calendar__25HcU div.calender_weeks-container__1Jo1J > div.calender_week__JzjY- {\n      margin: 2.5px 0;\n      justify-content: space-between; }\n      #calender_calendar__25HcU div.calender_weeks-container__1Jo1J > div.calender_week__JzjY- span.calender_day__1IoIF {\n        width: 50px;\n        height: 30px;\n        border-radius: 5px;\n        display: flex;\n        justify-content: center;\n        align-content: center;\n        align-items: center; }\n        #calender_calendar__25HcU div.calender_weeks-container__1Jo1J > div.calender_week__JzjY- span.calender_day__1IoIF:not(.calender_selected__n5W0H):hover {\n          background-color: yellowsilver; }\n        #calender_calendar__25HcU div.calender_weeks-container__1Jo1J > div.calender_week__JzjY- span.calender_day__1IoIF:last-child {\n          background-color: silver; }\n  #calender_calendar__25HcU div.calender_week__JzjY- {\n    direction: rtl;\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    font-family: 'irSans'; }\n    #calender_calendar__25HcU div.calender_week__JzjY- span.calender_day__1IoIF {\n      box-sizing: border-box;\n      text-align: center;\n      display: inline-block;\n      vertical-align: middle;\n      cursor: pointer;\n      color: black; }\n      #calender_calendar__25HcU div.calender_week__JzjY- span.calender_day__1IoIF.calender_today__33v9P {\n        border: 2px silver solid; }\n      #calender_calendar__25HcU div.calender_week__JzjY- span.calender_day__1IoIF.calender_different-month__3E9YY {\n        color: grey; }\n      #calender_calendar__25HcU div.calender_week__JzjY- span.calender_day__1IoIF.calender_selected__n5W0H {\n        background: silver;\n        color: white; }\n    #calender_calendar__25HcU div.calender_week__JzjY-.calender_names__3Vz07 {\n      margin: 10px 0 20px 0;\n      padding: 10px 0;\n      border-radius: 5px;\n      background-color: silver; }\n      #calender_calendar__25HcU div.calender_week__JzjY-.calender_names__3Vz07 span {\n        color: white;\n        font-size: 13px;\n        font-weight: bold;\n        width: 50px;\n        cursor: initial; }\n";
styleInject(css);

var classCallCheck = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

var createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

var inherits = function (subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
};

var possibleConstructorReturn = function (self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
};

moment.loadPersian();

var DayNames = function DayNames() {
  return React.createElement(
    'div',
    { className: 'week names' },
    React.createElement(
      'span',
      { className: 'day' },
      '\u0634'
    ),
    React.createElement(
      'span',
      { className: 'day' },
      '\u06CC'
    ),
    React.createElement(
      'span',
      { className: 'day' },
      '\u062F'
    ),
    React.createElement(
      'span',
      { className: 'day' },
      '\u0633'
    ),
    React.createElement(
      'span',
      { className: 'day' },
      '\u0686'
    ),
    React.createElement(
      'span',
      { className: 'day' },
      '\u067E'
    ),
    React.createElement(
      'span',
      { className: 'day' },
      '\u062C'
    )
  );
};

var Week = function Week(_ref) {
  var date = _ref.date,
      month = _ref.month,
      select = _ref.select,
      selected = _ref.selected;

  var days = [];

  var _loop = function _loop(i) {
    var day = {
      name: date.format('jdd').substring(0, 1),
      number: date.jDate(),
      isCurrentMonth: date.jMonth() === month.jMonth(),
      isToday: date.isSame(new Date(), 'day'),
      date: date
    };

    var className = 'day' + (day.isToday ? ' today' : '') + (day.isCurrentMonth ? '' : ' different-month') + (day.date.isSame(selected) ? ' selected' : '');

    days.push(React.createElement(
      'span',
      { key: day.date.toString(), className: className, onClick: function onClick() {
          return select(day);
        } },
      toPersianDigit(day.number)
    ));

    date = date.clone();
    date.add(1, 'd');
  };

  for (var i = 0; i < 7; i++) {
    _loop(i);
  }

  return React.createElement(
    'div',
    { className: 'week', key: days[0].toString() },
    days
  );
};

var RenderWeeks = function RenderWeeks(_ref2) {
  var month = _ref2.month,
      select = _ref2.select,
      selected = _ref2.selected;

  var weeks = [];
  var done = false;
  // start the week with SHANBE, so instead of day()
  // we user weekday for locale aware day index
  var date = month.clone().startOf('jMonth').weekday(0);

  var monthIndex = date.jMonth();

  var count = 0;

  while (!done) {
    weeks.push(React.createElement(Week, {
      key: date.toString(),
      date: date.clone(),
      month: month,
      select: select,
      selected: selected
    }));
    date.add(1, 'w');
    done = count++ > 2 && monthIndex !== date.jMonth();
    monthIndex = date.jMonth();
  }

  return React.createElement(
    'div',
    { className: 'weeks-container' },
    weeks
  );
};

var Calender = function (_Component) {
  inherits(Calender, _Component);

  function Calender(props) {
    classCallCheck(this, Calender);

    var _this = possibleConstructorReturn(this, (Calender.__proto__ || Object.getPrototypeOf(Calender)).call(this, props));

    _this.previous = function () {
      var month = _this.state.month;
      month.subtract(1, 'month');
      _this.setState({ month: month });
      _this.selectFirstDayOfMonth(month);
    };

    _this.next = function () {
      var month = _this.state.month;
      month.add(1, 'month');
      _this.setState({ month: month });
      _this.selectFirstDayOfMonth(month);
    };

    _this.selectFirstDayOfMonth = function (month) {
      _this.setState({
        selectedDay: month.clone().startOf('jMonth')
      });
    };

    _this.today = function () {
      var onChange = _this.props.onChange;


      _this.setState({
        month: moment().startOf('jMonth'), // "selected" is a moment object
        selectedDay: moment().startOf('jDay')
      });

      onChange && onChange(moment().format('jYYYY-jMM-jDD'));
    };

    _this.select = function (day) {
      var onChange = _this.props.onChange;

      _this.setState({ selectedDay: day.date });
      onChange && onChange(day.date.format('jYYYY-jMM-jDD'));
    };

    _this.state = {
      month: moment().startOf('jMonth'), // "selected" is a moment object
      selectedDay: moment().startOf('jDay')
    };
    return _this;
  }

  createClass(Calender, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        'div',
        { id: 'calender-wrapper' },
        React.createElement(
          'div',
          { id: 'calendar' },
          React.createElement(
            'div',
            { className: 'header' },
            React.createElement(
              'div',
              { className: 'icon-and-text-in-a-row', onClick: this.previous },
              React.createElement(
                'span',
                null,
                '\u276E'
              )
            ),
            React.createElement(
              'span',
              null,
              toPersianDigit(this.state.month.format('jYYYY jMMMM'))
            ),
            React.createElement(
              'div',
              { className: 'icon-and-text-in-a-row', onClick: this.next },
              React.createElement(
                'span',
                null,
                ' \u276F'
              )
            )
          ),
          React.createElement(DayNames, null),
          React.createElement(RenderWeeks, {
            select: this.select,
            month: this.state.month,
            selected: this.state.selectedDay
          })
        ),
        React.createElement(
          'button',
          { onClick: this.today },
          '\u0628\u0631\u0648 \u0628\u0647 \u0627\u0645\u0631\u0648\u0632'
        )
      );
    }
  }]);
  return Calender;
}(Component);

export default Calender;
//# sourceMappingURL=index.es.js.map
