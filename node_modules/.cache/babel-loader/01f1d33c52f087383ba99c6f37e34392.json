{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport QuestionCircleOutlined from \"@ant-design/icons/es/icons/QuestionCircleOutlined\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport Col from '../grid/col';\nimport { useLocaleReceiver } from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale/default';\nimport Tooltip from '../tooltip';\nimport { FormContext } from './context';\n\nfunction toTooltipProps(tooltip) {\n  if (!tooltip) {\n    return null;\n  }\n\n  if (_typeof(tooltip) === 'object' && !\n  /*#__PURE__*/\n  React.isValidElement(tooltip)) {\n    return tooltip;\n  }\n\n  return {\n    title: tooltip\n  };\n}\n\nvar FormItemLabel = function FormItemLabel(_ref) {\n  var prefixCls = _ref.prefixCls,\n      label = _ref.label,\n      htmlFor = _ref.htmlFor,\n      labelCol = _ref.labelCol,\n      labelAlign = _ref.labelAlign,\n      colon = _ref.colon,\n      required = _ref.required,\n      requiredMark = _ref.requiredMark,\n      tooltip = _ref.tooltip;\n\n  var _useLocaleReceiver = useLocaleReceiver('Form'),\n      _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 1),\n      formLocale = _useLocaleReceiver2[0];\n\n  if (!label) return null;\n  return (\n    /*#__PURE__*/\n    React.createElement(FormContext.Consumer, {\n      key: \"label\"\n    }, function (_ref2) {\n      var _classNames2;\n\n      var vertical = _ref2.vertical,\n          contextLabelAlign = _ref2.labelAlign,\n          contextLabelCol = _ref2.labelCol,\n          labelWrap = _ref2.labelWrap,\n          contextColon = _ref2.colon;\n\n      var _a;\n\n      var mergedLabelCol = labelCol || contextLabelCol || {};\n      var mergedLabelAlign = labelAlign || contextLabelAlign;\n      var labelClsBasic = \"\".concat(prefixCls, \"-item-label\");\n      var labelColClassName = classNames(labelClsBasic, mergedLabelAlign === 'left' && \"\".concat(labelClsBasic, \"-left\"), mergedLabelCol.className, _defineProperty({}, \"\".concat(labelClsBasic, \"-wrap\"), !!labelWrap));\n      var labelChildren = label; // Keep label is original where there should have no colon\n\n      var computedColon = colon === true || contextColon !== false && colon !== false;\n      var haveColon = computedColon && !vertical; // Remove duplicated user input colon\n\n      if (haveColon && typeof label === 'string' && label.trim() !== '') {\n        labelChildren = label.replace(/[:|ï¼š]\\s*$/, '');\n      } // Tooltip\n\n\n      var tooltipProps = toTooltipProps(tooltip);\n\n      if (tooltipProps) {\n        var _tooltipProps$icon = tooltipProps.icon,\n            icon = _tooltipProps$icon === void 0 ?\n        /*#__PURE__*/\n        React.createElement(QuestionCircleOutlined, null) : _tooltipProps$icon,\n            restTooltipProps = __rest(tooltipProps, [\"icon\"]);\n\n        var tooltipNode =\n        /*#__PURE__*/\n        React.createElement(Tooltip, _extends({}, restTooltipProps),\n        /*#__PURE__*/\n        React.cloneElement(icon, {\n          className: \"\".concat(prefixCls, \"-item-tooltip\"),\n          title: ''\n        }));\n        labelChildren =\n        /*#__PURE__*/\n        React.createElement(React.Fragment, null, labelChildren, tooltipNode);\n      } // Add required mark if optional\n\n\n      if (requiredMark === 'optional' && !required) {\n        labelChildren =\n        /*#__PURE__*/\n        React.createElement(React.Fragment, null, labelChildren,\n        /*#__PURE__*/\n        React.createElement(\"span\", {\n          className: \"\".concat(prefixCls, \"-item-optional\"),\n          title: \"\"\n        }, (formLocale === null || formLocale === void 0 ? void 0 : formLocale.optional) || ((_a = defaultLocale.Form) === null || _a === void 0 ? void 0 : _a.optional)));\n      }\n\n      var labelClassName = classNames((_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-item-required\"), required), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-item-required-mark-optional\"), requiredMark === 'optional'), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-item-no-colon\"), !computedColon), _classNames2));\n      return (\n        /*#__PURE__*/\n        React.createElement(Col, _extends({}, mergedLabelCol, {\n          className: labelColClassName\n        }),\n        /*#__PURE__*/\n        React.createElement(\"label\", {\n          htmlFor: htmlFor,\n          className: labelClassName,\n          title: typeof label === 'string' ? label : ''\n        }, labelChildren))\n      );\n    })\n  );\n};\n\nexport default FormItemLabel;","map":{"version":3,"sources":["/home/shahin/Desktop/project/lottery-frontend/node_modules/antd/es/form/FormItemLabel.js"],"names":["_extends","_defineProperty","_slicedToArray","_typeof","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","QuestionCircleOutlined","classNames","React","Col","useLocaleReceiver","defaultLocale","Tooltip","FormContext","toTooltipProps","tooltip","isValidElement","title","FormItemLabel","_ref","prefixCls","label","htmlFor","labelCol","labelAlign","colon","required","requiredMark","_useLocaleReceiver","_useLocaleReceiver2","formLocale","createElement","Consumer","key","_ref2","_classNames2","vertical","contextLabelAlign","contextLabelCol","labelWrap","contextColon","_a","mergedLabelCol","mergedLabelAlign","labelClsBasic","concat","labelColClassName","className","labelChildren","computedColon","haveColon","trim","replace","tooltipProps","_tooltipProps$icon","icon","restTooltipProps","tooltipNode","cloneElement","Fragment","optional","Form","labelClassName"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport QuestionCircleOutlined from \"@ant-design/icons/es/icons/QuestionCircleOutlined\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport Col from '../grid/col';\nimport { useLocaleReceiver } from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale/default';\nimport Tooltip from '../tooltip';\nimport { FormContext } from './context';\n\nfunction toTooltipProps(tooltip) {\n  if (!tooltip) {\n    return null;\n  }\n\n  if (_typeof(tooltip) === 'object' && ! /*#__PURE__*/React.isValidElement(tooltip)) {\n    return tooltip;\n  }\n\n  return {\n    title: tooltip\n  };\n}\n\nvar FormItemLabel = function FormItemLabel(_ref) {\n  var prefixCls = _ref.prefixCls,\n      label = _ref.label,\n      htmlFor = _ref.htmlFor,\n      labelCol = _ref.labelCol,\n      labelAlign = _ref.labelAlign,\n      colon = _ref.colon,\n      required = _ref.required,\n      requiredMark = _ref.requiredMark,\n      tooltip = _ref.tooltip;\n\n  var _useLocaleReceiver = useLocaleReceiver('Form'),\n      _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 1),\n      formLocale = _useLocaleReceiver2[0];\n\n  if (!label) return null;\n  return /*#__PURE__*/React.createElement(FormContext.Consumer, {\n    key: \"label\"\n  }, function (_ref2) {\n    var _classNames2;\n\n    var vertical = _ref2.vertical,\n        contextLabelAlign = _ref2.labelAlign,\n        contextLabelCol = _ref2.labelCol,\n        labelWrap = _ref2.labelWrap,\n        contextColon = _ref2.colon;\n\n    var _a;\n\n    var mergedLabelCol = labelCol || contextLabelCol || {};\n    var mergedLabelAlign = labelAlign || contextLabelAlign;\n    var labelClsBasic = \"\".concat(prefixCls, \"-item-label\");\n    var labelColClassName = classNames(labelClsBasic, mergedLabelAlign === 'left' && \"\".concat(labelClsBasic, \"-left\"), mergedLabelCol.className, _defineProperty({}, \"\".concat(labelClsBasic, \"-wrap\"), !!labelWrap));\n    var labelChildren = label; // Keep label is original where there should have no colon\n\n    var computedColon = colon === true || contextColon !== false && colon !== false;\n    var haveColon = computedColon && !vertical; // Remove duplicated user input colon\n\n    if (haveColon && typeof label === 'string' && label.trim() !== '') {\n      labelChildren = label.replace(/[:|ï¼š]\\s*$/, '');\n    } // Tooltip\n\n\n    var tooltipProps = toTooltipProps(tooltip);\n\n    if (tooltipProps) {\n      var _tooltipProps$icon = tooltipProps.icon,\n          icon = _tooltipProps$icon === void 0 ? /*#__PURE__*/React.createElement(QuestionCircleOutlined, null) : _tooltipProps$icon,\n          restTooltipProps = __rest(tooltipProps, [\"icon\"]);\n\n      var tooltipNode = /*#__PURE__*/React.createElement(Tooltip, _extends({}, restTooltipProps), /*#__PURE__*/React.cloneElement(icon, {\n        className: \"\".concat(prefixCls, \"-item-tooltip\"),\n        title: ''\n      }));\n      labelChildren = /*#__PURE__*/React.createElement(React.Fragment, null, labelChildren, tooltipNode);\n    } // Add required mark if optional\n\n\n    if (requiredMark === 'optional' && !required) {\n      labelChildren = /*#__PURE__*/React.createElement(React.Fragment, null, labelChildren, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-item-optional\"),\n        title: \"\"\n      }, (formLocale === null || formLocale === void 0 ? void 0 : formLocale.optional) || ((_a = defaultLocale.Form) === null || _a === void 0 ? void 0 : _a.optional)));\n    }\n\n    var labelClassName = classNames((_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-item-required\"), required), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-item-required-mark-optional\"), requiredMark === 'optional'), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-item-no-colon\"), !computedColon), _classNames2));\n    return /*#__PURE__*/React.createElement(Col, _extends({}, mergedLabelCol, {\n      className: labelColClassName\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: htmlFor,\n      className: labelClassName,\n      title: typeof label === 'string' ? label : ''\n    }, labelChildren));\n  });\n};\n\nexport default FormItemLabel;"]},"metadata":{},"sourceType":"module"}