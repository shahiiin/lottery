{"ast":null,"code":"import * as React from 'react';\nimport classNames from 'classnames';\nimport CSSMotion from \"rc-animate/es/CSSMotion\";\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined';\n\nvar getCollapsedWidth = function getCollapsedWidth() {\n  return {\n    width: 0,\n    opacity: 0,\n    transform: 'scale(0)'\n  };\n};\n\nvar getRealWidth = function getRealWidth(node) {\n  return {\n    width: node.scrollWidth,\n    opacity: 1,\n    transform: 'scale(1)'\n  };\n};\n\nexport default function LoadingIcon(_ref) {\n  var prefixCls = _ref.prefixCls,\n      loading = _ref.loading,\n      existIcon = _ref.existIcon;\n  var visible = !!loading;\n\n  if (existIcon) {\n    return (\n      /*#__PURE__*/\n      React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-loading-icon\")\n      },\n      /*#__PURE__*/\n      React.createElement(LoadingOutlined, null))\n    );\n  }\n\n  return (\n    /*#__PURE__*/\n    React.createElement(CSSMotion, {\n      visible: visible // We do not really use this motionName\n      ,\n      motionName: \"\".concat(prefixCls, \"-loading-icon-motion\"),\n      removeOnLeave: true,\n      onAppearStart: getCollapsedWidth,\n      onAppearActive: getRealWidth,\n      onEnterStart: getCollapsedWidth,\n      onEnterActive: getRealWidth,\n      onLeaveStart: getRealWidth,\n      onLeaveActive: getCollapsedWidth\n    }, function (_ref2, ref) {\n      var className = _ref2.className,\n          style = _ref2.style;\n      return (\n        /*#__PURE__*/\n        React.createElement(\"span\", {\n          className: \"\".concat(prefixCls, \"-loading-icon\"),\n          style: style,\n          ref: ref\n        },\n        /*#__PURE__*/\n        React.createElement(LoadingOutlined, {\n          className: classNames(className)\n        }))\n      );\n    })\n  );\n}","map":{"version":3,"sources":["/home/shahin/Desktop/project/lottery-frontend/node_modules/antd/es/button/LoadingIcon.js"],"names":["React","classNames","CSSMotion","LoadingOutlined","getCollapsedWidth","width","opacity","transform","getRealWidth","node","scrollWidth","LoadingIcon","_ref","prefixCls","loading","existIcon","visible","createElement","className","concat","motionName","removeOnLeave","onAppearStart","onAppearActive","onEnterStart","onEnterActive","onLeaveStart","onLeaveActive","_ref2","ref","style"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;;AAEA,IAAIC,iBAAiB,GAAG,SAASA,iBAAT,GAA6B;AACnD,SAAO;AACLC,IAAAA,KAAK,EAAE,CADF;AAELC,IAAAA,OAAO,EAAE,CAFJ;AAGLC,IAAAA,SAAS,EAAE;AAHN,GAAP;AAKD,CAND;;AAQA,IAAIC,YAAY,GAAG,SAASA,YAAT,CAAsBC,IAAtB,EAA4B;AAC7C,SAAO;AACLJ,IAAAA,KAAK,EAAEI,IAAI,CAACC,WADP;AAELJ,IAAAA,OAAO,EAAE,CAFJ;AAGLC,IAAAA,SAAS,EAAE;AAHN,GAAP;AAKD,CAND;;AAQA,eAAe,SAASI,WAAT,CAAqBC,IAArB,EAA2B;AACxC,MAAIC,SAAS,GAAGD,IAAI,CAACC,SAArB;AAAA,MACIC,OAAO,GAAGF,IAAI,CAACE,OADnB;AAAA,MAEIC,SAAS,GAAGH,IAAI,CAACG,SAFrB;AAGA,MAAIC,OAAO,GAAG,CAAC,CAACF,OAAhB;;AAEA,MAAIC,SAAJ,EAAe;AACb;AAAO;AAAaf,MAAAA,KAAK,CAACiB,aAAN,CAAoB,MAApB,EAA4B;AAC9CC,QAAAA,SAAS,EAAE,GAAGC,MAAH,CAAUN,SAAV,EAAqB,eAArB;AADmC,OAA5B;AAEjB;AAAab,MAAAA,KAAK,CAACiB,aAAN,CAAoBd,eAApB,EAAqC,IAArC,CAFI;AAApB;AAGD;;AAED;AAAO;AAAaH,IAAAA,KAAK,CAACiB,aAAN,CAAoBf,SAApB,EAA+B;AACjDc,MAAAA,OAAO,EAAEA,OADwC,CAChC;AADgC;AAGjDI,MAAAA,UAAU,EAAE,GAAGD,MAAH,CAAUN,SAAV,EAAqB,sBAArB,CAHqC;AAIjDQ,MAAAA,aAAa,EAAE,IAJkC;AAKjDC,MAAAA,aAAa,EAAElB,iBALkC;AAMjDmB,MAAAA,cAAc,EAAEf,YANiC;AAOjDgB,MAAAA,YAAY,EAAEpB,iBAPmC;AAQjDqB,MAAAA,aAAa,EAAEjB,YARkC;AASjDkB,MAAAA,YAAY,EAAElB,YATmC;AAUjDmB,MAAAA,aAAa,EAAEvB;AAVkC,KAA/B,EAWjB,UAAUwB,KAAV,EAAiBC,GAAjB,EAAsB;AACvB,UAAIX,SAAS,GAAGU,KAAK,CAACV,SAAtB;AAAA,UACIY,KAAK,GAAGF,KAAK,CAACE,KADlB;AAEA;AAAO;AAAa9B,QAAAA,KAAK,CAACiB,aAAN,CAAoB,MAApB,EAA4B;AAC9CC,UAAAA,SAAS,EAAE,GAAGC,MAAH,CAAUN,SAAV,EAAqB,eAArB,CADmC;AAE9CiB,UAAAA,KAAK,EAAEA,KAFuC;AAG9CD,UAAAA,GAAG,EAAEA;AAHyC,SAA5B;AAIjB;AAAa7B,QAAAA,KAAK,CAACiB,aAAN,CAAoBd,eAApB,EAAqC;AACnDe,UAAAA,SAAS,EAAEjB,UAAU,CAACiB,SAAD;AAD8B,SAArC,CAJI;AAApB;AAOD,KArBmB;AAApB;AAsBD","sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport CSSMotion from \"rc-animate/es/CSSMotion\";\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined';\n\nvar getCollapsedWidth = function getCollapsedWidth() {\n  return {\n    width: 0,\n    opacity: 0,\n    transform: 'scale(0)'\n  };\n};\n\nvar getRealWidth = function getRealWidth(node) {\n  return {\n    width: node.scrollWidth,\n    opacity: 1,\n    transform: 'scale(1)'\n  };\n};\n\nexport default function LoadingIcon(_ref) {\n  var prefixCls = _ref.prefixCls,\n      loading = _ref.loading,\n      existIcon = _ref.existIcon;\n  var visible = !!loading;\n\n  if (existIcon) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-loading-icon\")\n    }, /*#__PURE__*/React.createElement(LoadingOutlined, null));\n  }\n\n  return /*#__PURE__*/React.createElement(CSSMotion, {\n    visible: visible // We do not really use this motionName\n    ,\n    motionName: \"\".concat(prefixCls, \"-loading-icon-motion\"),\n    removeOnLeave: true,\n    onAppearStart: getCollapsedWidth,\n    onAppearActive: getRealWidth,\n    onEnterStart: getCollapsedWidth,\n    onEnterActive: getRealWidth,\n    onLeaveStart: getRealWidth,\n    onLeaveActive: getCollapsedWidth\n  }, function (_ref2, ref) {\n    var className = _ref2.className,\n        style = _ref2.style;\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-loading-icon\"),\n      style: style,\n      ref: ref\n    }, /*#__PURE__*/React.createElement(LoadingOutlined, {\n      className: classNames(className)\n    }));\n  });\n}"]},"metadata":{},"sourceType":"module"}