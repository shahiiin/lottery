{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport pickAttrs from \"rc-util/es/pickAttrs\";\nimport Input from './Input';\n\nvar SingleSelector = function SingleSelector(props) {\n  var inputElement = props.inputElement,\n      prefixCls = props.prefixCls,\n      id = props.id,\n      inputRef = props.inputRef,\n      disabled = props.disabled,\n      autoFocus = props.autoFocus,\n      autoComplete = props.autoComplete,\n      activeDescendantId = props.activeDescendantId,\n      mode = props.mode,\n      open = props.open,\n      values = props.values,\n      placeholder = props.placeholder,\n      tabIndex = props.tabIndex,\n      showSearch = props.showSearch,\n      searchValue = props.searchValue,\n      activeValue = props.activeValue,\n      maxLength = props.maxLength,\n      onInputKeyDown = props.onInputKeyDown,\n      onInputMouseDown = props.onInputMouseDown,\n      onInputChange = props.onInputChange,\n      onInputPaste = props.onInputPaste,\n      onInputCompositionStart = props.onInputCompositionStart,\n      onInputCompositionEnd = props.onInputCompositionEnd;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      inputChanged = _React$useState2[0],\n      setInputChanged = _React$useState2[1];\n\n  var combobox = mode === 'combobox';\n  var inputEditable = combobox || showSearch;\n  var item = values[0];\n  var inputValue = searchValue || '';\n\n  if (combobox && activeValue && !inputChanged) {\n    inputValue = activeValue;\n  }\n\n  React.useEffect(function () {\n    if (combobox) {\n      setInputChanged(false);\n    }\n  }, [combobox, activeValue]); // Not show text when closed expect combobox mode\n\n  var hasTextInput = mode !== 'combobox' && !open && !showSearch ? false : !!inputValue;\n  var title = item && (typeof item.label === 'string' || typeof item.label === 'number') ? item.label.toString() : undefined;\n\n  var renderPlaceholder = function renderPlaceholder() {\n    if (item) {\n      return null;\n    }\n\n    var hiddenStyle = hasTextInput ? {\n      visibility: 'hidden'\n    } : undefined;\n    return (\n      /*#__PURE__*/\n      React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-selection-placeholder\"),\n        style: hiddenStyle\n      }, placeholder)\n    );\n  };\n\n  return (\n    /*#__PURE__*/\n    React.createElement(React.Fragment, null,\n    /*#__PURE__*/\n    React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-selection-search\")\n    },\n    /*#__PURE__*/\n    React.createElement(Input, {\n      ref: inputRef,\n      prefixCls: prefixCls,\n      id: id,\n      open: open,\n      inputElement: inputElement,\n      disabled: disabled,\n      autoFocus: autoFocus,\n      autoComplete: autoComplete,\n      editable: inputEditable,\n      activeDescendantId: activeDescendantId,\n      value: inputValue,\n      onKeyDown: onInputKeyDown,\n      onMouseDown: onInputMouseDown,\n      onChange: function onChange(e) {\n        setInputChanged(true);\n        onInputChange(e);\n      },\n      onPaste: onInputPaste,\n      onCompositionStart: onInputCompositionStart,\n      onCompositionEnd: onInputCompositionEnd,\n      tabIndex: tabIndex,\n      attrs: pickAttrs(props, true),\n      maxLength: combobox ? maxLength : undefined\n    })), !combobox && item && !hasTextInput &&\n    /*#__PURE__*/\n    React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-selection-item\"),\n      title: title\n    }, item.label), renderPlaceholder())\n  );\n};\n\nexport default SingleSelector;","map":{"version":3,"sources":["/home/shahin/Desktop/project/lottery-frontend/node_modules/rc-select/es/Selector/SingleSelector.js"],"names":["_slicedToArray","React","pickAttrs","Input","SingleSelector","props","inputElement","prefixCls","id","inputRef","disabled","autoFocus","autoComplete","activeDescendantId","mode","open","values","placeholder","tabIndex","showSearch","searchValue","activeValue","maxLength","onInputKeyDown","onInputMouseDown","onInputChange","onInputPaste","onInputCompositionStart","onInputCompositionEnd","_React$useState","useState","_React$useState2","inputChanged","setInputChanged","combobox","inputEditable","item","inputValue","useEffect","hasTextInput","title","label","toString","undefined","renderPlaceholder","hiddenStyle","visibility","createElement","className","concat","style","Fragment","ref","editable","value","onKeyDown","onMouseDown","onChange","e","onPaste","onCompositionStart","onCompositionEnd","attrs"],"mappings":"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","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport pickAttrs from \"rc-util/es/pickAttrs\";\nimport Input from './Input';\n\nvar SingleSelector = function SingleSelector(props) {\n  var inputElement = props.inputElement,\n      prefixCls = props.prefixCls,\n      id = props.id,\n      inputRef = props.inputRef,\n      disabled = props.disabled,\n      autoFocus = props.autoFocus,\n      autoComplete = props.autoComplete,\n      activeDescendantId = props.activeDescendantId,\n      mode = props.mode,\n      open = props.open,\n      values = props.values,\n      placeholder = props.placeholder,\n      tabIndex = props.tabIndex,\n      showSearch = props.showSearch,\n      searchValue = props.searchValue,\n      activeValue = props.activeValue,\n      maxLength = props.maxLength,\n      onInputKeyDown = props.onInputKeyDown,\n      onInputMouseDown = props.onInputMouseDown,\n      onInputChange = props.onInputChange,\n      onInputPaste = props.onInputPaste,\n      onInputCompositionStart = props.onInputCompositionStart,\n      onInputCompositionEnd = props.onInputCompositionEnd;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      inputChanged = _React$useState2[0],\n      setInputChanged = _React$useState2[1];\n\n  var combobox = mode === 'combobox';\n  var inputEditable = combobox || showSearch;\n  var item = values[0];\n  var inputValue = searchValue || '';\n\n  if (combobox && activeValue && !inputChanged) {\n    inputValue = activeValue;\n  }\n\n  React.useEffect(function () {\n    if (combobox) {\n      setInputChanged(false);\n    }\n  }, [combobox, activeValue]); // Not show text when closed expect combobox mode\n\n  var hasTextInput = mode !== 'combobox' && !open && !showSearch ? false : !!inputValue;\n  var title = item && (typeof item.label === 'string' || typeof item.label === 'number') ? item.label.toString() : undefined;\n\n  var renderPlaceholder = function renderPlaceholder() {\n    if (item) {\n      return null;\n    }\n\n    var hiddenStyle = hasTextInput ? {\n      visibility: 'hidden'\n    } : undefined;\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-selection-placeholder\"),\n      style: hiddenStyle\n    }, placeholder);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-selection-search\")\n  }, /*#__PURE__*/React.createElement(Input, {\n    ref: inputRef,\n    prefixCls: prefixCls,\n    id: id,\n    open: open,\n    inputElement: inputElement,\n    disabled: disabled,\n    autoFocus: autoFocus,\n    autoComplete: autoComplete,\n    editable: inputEditable,\n    activeDescendantId: activeDescendantId,\n    value: inputValue,\n    onKeyDown: onInputKeyDown,\n    onMouseDown: onInputMouseDown,\n    onChange: function onChange(e) {\n      setInputChanged(true);\n      onInputChange(e);\n    },\n    onPaste: onInputPaste,\n    onCompositionStart: onInputCompositionStart,\n    onCompositionEnd: onInputCompositionEnd,\n    tabIndex: tabIndex,\n    attrs: pickAttrs(props, true),\n    maxLength: combobox ? maxLength : undefined\n  })), !combobox && item && !hasTextInput && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-selection-item\"),\n    title: title\n  }, item.label), renderPlaceholder());\n};\n\nexport default SingleSelector;"]},"metadata":{},"sourceType":"module"}